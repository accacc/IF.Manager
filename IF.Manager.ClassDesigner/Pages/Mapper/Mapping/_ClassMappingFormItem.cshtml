@model IF.Manager.Service.Model.IFClassMapping
@{
    Layout = null;

    List<SelectListItem> classes = ViewData["classes"] as List<SelectListItem>;
    List<SelectListItem> models = ViewData["models"] as List<SelectListItem>;


    var index = Guid.NewGuid();

    foreach (var item in classes)
    {
        item.Selected = false;
        if (item.Value == Model.FromPropertyId.ToString())
        {
            item.Selected = true;
        }
    }


    foreach (var item in models)
    {
        item.Selected = false;
        if (item.Value == Model.ToPropertyId.ToString())
        {
            item.Selected = true;
        }
    }



}

<tr id="@index">
    <td>
        <div class="form-group">

            @Html.DropDownList($"Form[{index}].FromPropertyId", classes, "Select", new { @class = "form-control" })

        </div>
    </td>
    <td>
        <div class="form-group">

            @Html.DropDownList($"Form[{index}].ToPropertyId", models, "Select", new { @class = "form-control" })

        </div>
    </td>


    <td>
        <input type="hidden" name="Form.Index" value="@index" />
        <input type="hidden" name="Form[@index].Id" value="@Model.Id" />
    </td>
    <td><button onclick="deleteOrder('@index')">-</button></td>
</tr>


<script>
    function deleteOrder(index) {
        var id = "table#EmptyFormItem tr#" + index;
        $(id).remove();
        return false;
    }


</script>